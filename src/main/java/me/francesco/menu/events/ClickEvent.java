package me.francesco.menu.events;

import me.francesco.menu.Menu;
import me.francesco.menu.configs.ConfigMenus;
import me.francesco.menu.inv.MenusInv;
import me.francesco.menu.utils.MyUtils;
import net.kyori.adventure.text.Component;
import net.kyori.adventure.text.serializer.legacy.LegacyComponentSerializer;
import org.bukkit.Bukkit;
import org.bukkit.ChatColor;
import org.bukkit.Material;
import org.bukkit.entity.Player;
import org.bukkit.event.EventHandler;
import org.bukkit.event.Listener;
import org.bukkit.event.inventory.InventoryClickEvent;

import java.util.List;
import java.util.Objects;

public class ClickEvent implements Listener {
    Menu plugin;
    public ClickEvent(Menu plugin) {
        this.plugin = plugin;
    }
    @EventHandler
    public void onInventoryClick(InventoryClickEvent e) {
        Player player = (Player) e.getWhoClicked();
        List<String> listInventory = ConfigMenus.getAllFiles();
        Component titleMenu = e.getView().title();
        String legacyTitle = MyUtils.getString(titleMenu);

        for (String nomeMenu : listInventory) {
            String nameFromConfig = MenusInv.setPlaceHolder(player,ConfigMenus.get(nomeMenu).getString(nomeMenu + ".title") );
            Component titleFromConfig = MyUtils.getComponent(nameFromConfig);
            String legacyConfigTitle = MyUtils.getString(titleFromConfig);

            if (legacyTitle.equalsIgnoreCase(legacyConfigTitle)) {
                processMenuItems(e, nomeMenu, player);
            }
        }
    }

    private void processMenuItems(InventoryClickEvent e, String menuName, Player player) {
        checkEdgesOrFillItem(e,menuName); //Check if the item that the player  is clicking is a edge or a fill item generated by the code.
        int j = 0;
        while (ConfigMenus.get(menuName).get(menuName + ".items." + j) != null) {
            int slot = ConfigMenus.get(menuName).getInt(menuName + ".items." + j + ".slot");
            if (slot == e.getSlot()) {
                List<String> commands = ConfigMenus.get(menuName).getStringList(menuName + ".items." + j + ".cmd");
                executeCommands(e, commands, player);
                e.setCancelled(true);
                return;
            }
            j++;
        }
    }

    private void checkEdgesOrFillItem(InventoryClickEvent e, String menuName){
        if(e.getCurrentItem()==null)return;
        if(e.getCurrentItem().getType().toString().equalsIgnoreCase(Material.getMaterial(Objects.requireNonNull(ConfigMenus.get(menuName).getString(menuName + ".customFeature.fillMenu" + ".material")).toUpperCase()).toString())){
            e.setCancelled(true);
        }
        if(e.getCurrentItem().getType().toString().equalsIgnoreCase(Material.getMaterial(Objects.requireNonNull(ConfigMenus.get(menuName).getString(menuName + ".customFeature.edges" + ".material")).toUpperCase()).toString())){
            e.setCancelled(true);
        }
    }

    private void executeCommands(InventoryClickEvent e, List<String> commands, Player player) {
        for (String cmd : commands) {
            if (cmd.startsWith("%chat%")) {
                executeChatCommand(cmd, player);
            } else if (cmd.startsWith("%write%")) {
                executeWriteCommand(cmd, player);
            } else if (cmd.startsWith("%say%")) {
                executeSayCommand(cmd, player);
            }  else if (cmd.startsWith("%menu%")) {
                executeMenuCommand(cmd, player);
            }else {
                if (!cmd.isEmpty()) {
                    Bukkit.dispatchCommand(Bukkit.getConsoleSender(), cmd.replace("%player%", player.getName()));
                }
            }
        }
    }

    // open a menu for you just clicking on the item. EXAMPLE: "%menu% <name_of_the_menu>" -> Open you the menu.
    private void executeMenuCommand(String cmd, Player player) {
        cmd = cmd.replace("%menu%", "").trim();
        if(!MenusInv.inventoryExist(cmd)){
            player.sendMessage(MyUtils.getComponent(plugin.getConfig().getString("error.Wrong-menu")));
            return;
        }
        player.openInventory(MenusInv.getInventory(player,cmd));
    }

    // Click on the item to execute the commands. EXAMPLE: "%chat% gamemode survival" -> Puts you in survival mode if you have the permissions.
    private void executeChatCommand(String cmd, Player player) {
        cmd = cmd.replace("%chat%", "").trim();
        player.closeInventory();
        player.performCommand(cmd);
    }

    // By the class ChatEvent, he recognizes what you write in chat and execute the command by adding the name of the player to the end.
    // EXAMPLE: "%write% menu open <name_of_the_menu> <player_name>" -> Opens the menu to the player you write in chat
    private void executeWriteCommand(String cmd, Player player) {
        cmd = cmd.replace("%write%", "").trim();
        Menu.playerList.put(player, cmd);
        Component message = MyUtils.getComponent(Objects.requireNonNull(plugin.getConfig().getString("write.message")).replace("%keyword%", Objects.requireNonNull(plugin.getConfig().getString("write.keyword"))));
        player.sendMessage(message);
        player.closeInventory();
    }

    // Writes in chat (only to the player) what you write after %say%
    // EXAMPLE: "%say% Hello world!" -> He will send to the player this messagge.
    private void executeSayCommand(String cmd, Player player) {
        cmd = cmd.replace("%say%", "").trim();
        player.sendMessage(MyUtils.getComponent(MenusInv.setPlaceHolder(player,cmd)));
        player.closeInventory();
    }
}
